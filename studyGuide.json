{
  "studyGuide.json": [
    {
      "conceptId": "T001",
      "conceptTitle": "Which HTML element defines a table?",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which HTML element defines a table?",
        "options": [
          { "optionText": "<tbody>", "isCorrect": false },
          { "optionText": "<table>", "isCorrect": true },
          { "optionText": "<div>", "isCorrect": false },
          { "optionText": "<tr>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<table>\n  \n</table>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Table Container",
        "snippetOrAnalogy": "The foundational element that wraps all table content.",
        "importance": "Defines the start and end of the table structure."
      },
      "answerExplanation": {
        "title": "Explanation of <table>",
        "text": "The <table> element is the container for all other table-related elements and defines the start and end of an HTML table."
      }
    },
    {
      "conceptId": "T002",
      "conceptTitle": "Correct element for table rows",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What is the correct element for table rows?",
        "options": [
          { "optionText": "<td>", "isCorrect": false },
          { "optionText": "<tr>", "isCorrect": true },
          { "optionText": "<th>", "isCorrect": false },
          { "optionText": "<tbody>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<tr>\n  <td>Data</td>\n</tr>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Row Marker",
        "snippetOrAnalogy": "Think of it as a single horizontal line of content in the table.",
        "importance": "Must contain <td> or <th> cells."
      },
      "answerExplanation": {
        "title": "Explanation of <tr>",
        "text": "The <tr> element defines a row in an HTML table, and it contains <td> (data) or <th> (header) cells."
      }
    },
    {
      "conceptId": "T003",
      "conceptTitle": "Elements for table header cells",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which elements define header cells in a table?",
        "options": [
          { "optionText": "<thead>", "isCorrect": false },
          { "optionText": "<th>", "isCorrect": true },
          { "optionText": "<caption>", "isCorrect": false },
          { "optionText": "<tbody>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<th>Product Name</th>",
        "css": "/* Default is bold and centered */"
      },
      "visualConcept": {
        "title": "Header Cell",
        "snippetOrAnalogy": "Provides the semantic label for a column or row.",
        "importance": "Crucial for screen reader accessibility."
      },
      "answerExplanation": {
        "title": "Explanation of <th>",
        "text": "The <th> element defines a header cell, which typically displays text in bold and centered, and provides semantic meaning for accessibility."
      }
    },
    {
      "conceptId": "T004",
      "conceptTitle": "Tags for grouping rows logically",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What tags are used for grouping rows logically in a table?",
        "options": [
          { "optionText": "<thead>, <tbody>, <tfoot>", "isCorrect": true },
          { "optionText": "<rowgroup>, <colgroup>", "isCorrect": false },
          { "optionText": "<tr>, <td>", "isCorrect": false },
          { "optionText": "<group>, <section>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<table>\n  <thead>...</thead>\n  <tbody>...</tbody>\n  <tfoot>...</tfoot>\n</table>",
        "css": "/* Allows header to remain fixed on print/scroll */"
      },
      "visualConcept": {
        "title": "Semantic Grouping",
        "snippetOrAnalogy": "Separates the table into distinct logical parts (Head, Body, Foot).",
        "importance": "Improves semantics and aids scrolling/printing behavior."
      },
      "answerExplanation": {
        "title": "Explanation of <thead>, <tbody>, <tfoot>",
        "text": "The <thead>, <tbody>, and <tfoot> tags group rows into the header, body, and footer sections, improving semantics and aiding scrolling/printing behavior."
      }
    },
    {
      "conceptId": "T005",
      "conceptTitle": "Adding a caption/title to an HTML table",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which element adds a caption/title to a HTML table?",
        "options": [
          { "optionText": "<title>", "isCorrect": false },
          { "optionText": "<caption>", "isCorrect": true },
          { "optionText": "<header>", "isCorrect": false },
          { "optionText": "<summary>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<table>\n  <caption>Sales Figures</caption>\n  \n</table>",
        "css": "/* Can be styled directly with CSS */"
      },
      "visualConcept": {
        "title": "Table Title",
        "snippetOrAnalogy": "A descriptive title placed outside the grid but attached to the table.",
        "importance": "Provides a descriptive title for screen readers and users."
      },
      "answerExplanation": {
        "title": "Explanation of <caption>",
        "text": "The <caption> element is used immediately after the opening <table> tag to provide a descriptive title for the table content."
      }
    },
    {
      "conceptId": "T006",
      "conceptTitle": "Spanning a cell across multiple columns",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "How do you make a cell span multiple columns?",
        "options": [
          { "optionText": "rowspan", "isCorrect": false },
          { "optionText": "colspan", "isCorrect": true },
          { "optionText": "spancol", "isCorrect": false },
          { "optionText": "mergecol", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<td colspan=\"2\">Merged Data</td>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Horizontal Merge",
        "snippetOrAnalogy": "Like merging two cells horizontally in a spreadsheet program.",
        "importance": "Used to create common header labels across multiple data columns."
      },
      "answerExplanation": {
        "title": "Explanation of colspan",
        "text": "The 'colspan' attribute is applied to a <td> or <th> element and specifies how many columns wide that cell should be."
      }
    },
    {
      "conceptId": "T007",
      "conceptTitle": "CSS property for table width",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "What CSS property controls the width of a table?",
        "options": [
          { "optionText": "width", "isCorrect": true },
          { "optionText": "table-width", "isCorrect": false },
          { "optionText": "col-width", "isCorrect": false },
          { "optionText": "total-width", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "table { width: 80%; }"
      },
      "visualConcept": {
        "title": "Table Sizing",
        "snippetOrAnalogy": "Controls the total horizontal space the table occupies.",
        "importance": "Essential for responsive design when using percentage units."
      },
      "answerExplanation": {
        "title": "Explanation of width",
        "text": "The standard 'width' CSS property is applied directly to the <table> element to set its overall width."
      }
    },
    {
      "conceptId": "T008",
      "conceptTitle": "CSS property for space between table cells",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which CSS property sets the space between table cells?",
        "options": [
          { "optionText": "cellspacing", "isCorrect": false },
          { "optionText": "border-spacing", "isCorrect": true },
          { "optionText": "gap", "isCorrect": false },
          { "optionText": "cellspace", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "table { border-spacing: 10px; }"
      },
      "visualConcept": {
        "title": "Cell Gutter",
        "snippetOrAnalogy": "Like the space between photos in a picture grid.",
        "importance": "Only works when `border-collapse` is set to `separate` (the default)."
      },
      "answerExplanation": {
        "title": "Explanation of border-spacing",
        "text": "The 'border-spacing' property controls the distance between the borders of adjacent cells, assuming 'border-collapse' is set to 'separate' (the default)."
      }
    },
    {
      "conceptId": "T009",
      "conceptTitle": "CSS for border on all table cells",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How do you apply a border to all cells within a table using CSS?",
        "options": [
          { "optionText": "border: 1px solid", "isCorrect": false },
          { "optionText": "border-collapse: collapse", "isCorrect": true },
          { "optionText": "border-style: all", "isCorrect": false },
          { "optionText": "border-full: true", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "table, th, td { border: 1px solid black; }\ntable { border-collapse: collapse; }"
      },
      "visualConcept": {
        "title": "Single Border Line",
        "snippetOrAnalogy": "Merges adjacent cell borders to avoid double lines.",
        "importance": "Setting `border-collapse: collapse` on the table is the key to clean, single-line borders."
      },
      "answerExplanation": {
        "title": "Explanation of border-collapse",
        "text": "While you must apply 'border' to <th> and <td>, setting 'border-collapse: collapse' on the <table> is the key step that merges adjacent borders into a single, clean line."
      }
    },
    {
      "conceptId": "R010",
      "conceptTitle": "Making a table responsive",
      "category": "Responsive Design",
      "multipleChoiceQuestion": {
        "questionText": "What is the correct way to make a table responsive?",
        "options": [
          { "optionText": "fixed width only", "isCorrect": false },
          { "optionText": "use max-width: 100%", "isCorrect": true },
          { "optionText": "overflow: hidden", "isCorrect": false },
          { "optionText": "set width: auto", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<div class='table-wrapper'>\n  <table>...</table>\n</div>",
        "css": "table { max-width: 100%; height: auto; }\n.table-wrapper { overflow-x: auto; }"
      },
      "visualConcept": {
        "title": "Fluid Sizing / Scroll Wrapper",
        "snippetOrAnalogy": "The table shrinks if it can, or scrolls if it can't fit.",
        "importance": "Ensures the table doesn't break the layout on small devices."
      },
      "answerExplanation": {
        "title": "Explanation of Responsive Tables",
        "text": "Setting 'max-width: 100%' ensures the table will scale down on small screens. Tables are also commonly wrapped in a container with 'overflow: auto' to allow horizontal scrolling on small viewports."
      }
    },
    {
      "conceptId": "T011",
      "conceptTitle": "Purpose of the <colgroup> element",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What does the <colgroup> element do?",
        "options": [
          { "optionText": "Groups columns for styling", "isCorrect": true },
          { "optionText": "Groups rows", "isCorrect": false },
          { "optionText": "Adds captions", "isCorrect": false },
          { "optionText": "Defines table footers", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<table>\n  <colgroup>...</colgroup>\n  \n</table>",
        "css": "/* Applies styles to columns */"
      },
      "visualConcept": {
        "title": "Column Grouping",
        "snippetOrAnalogy": "Allows you to target a vertical group of cells for styling before they are rendered.",
        "importance": "Used to group columns in a table to apply styles and properties to those columns collectively."
      },
      "answerExplanation": {
        "title": "Explanation of <colgroup>",
        "text": "The <colgroup> element is used to group columns in a table to apply styles and properties to those columns collectively."
      }
    },
    {
      "conceptId": "T012",
      "conceptTitle": "Tag for individual column grouping",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What tag groups individual columns for styling and attributes?",
        "options": [
          { "optionText": "<colgroup>", "isCorrect": false },
          { "optionText": "<col>", "isCorrect": true },
          { "optionText": "<tbody>", "isCorrect": false },
          { "optionText": "<tr>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<colgroup>\n  <col style=\"background: red;\">\n</colgroup>",
        "css": "/* Styles can be inlined or via CSS class */"
      },
      "visualConcept": {
        "title": "Individual Column Target",
        "snippetOrAnalogy": "A placeholder tag inside <colgroup> that represents one or more columns.",
        "importance": "Specifies properties for a single column or set of columns."
      },
      "answerExplanation": {
        "title": "Explanation of <col>",
        "text": "The <col> tag, used inside <colgroup>, specifies properties for a single column or set of columns (using the 'span' attribute) in a table."
      }
    },
    {
      "conceptId": "T013",
      "conceptTitle": "CSS property for table row height",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which CSS property controls the height of a table row?",
        "options": [
          { "optionText": "row-height", "isCorrect": false },
          { "optionText": "height", "isCorrect": true },
          { "optionText": "line-height", "isCorrect": false },
          { "optionText": "max-height", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "tr { height: 50px; }"
      },
      "visualConcept": {
        "title": "Vertical Size",
        "snippetOrAnalogy": "Sets the minimum vertical dimension of the row.",
        "importance": "The height of the row is determined by the tallest cell within it."
      },
      "answerExplanation": {
        "title": "Explanation of height",
        "text": "The standard 'height' property is applied to the <tr>, <th>, or <td> elements to control the row's height."
      }
    },
    {
      "conceptId": "T014",
      "conceptTitle": "Styling alternate rows with CSS",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How would you style alternate rows with different colors?",
        "options": [
          { "optionText": ":nth-child(odd) selector", "isCorrect": true },
          { "optionText": ":hover pseudo-class", "isCorrect": false },
          { "optionText": ":first-child selector", "isCorrect": false },
          { "optionText": "Specific class on <tr>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "tbody tr:nth-child(odd) { background-color: #f2f2f2; }"
      },
      "visualConcept": {
        "title": "Zebra Striping",
        "snippetOrAnalogy": "A technique to make long tables easier to read by alternating row colors.",
        "importance": "Most common and efficient CSS method for improved readability."
      },
      "answerExplanation": {
        "title": "Explanation of :nth-child",
        "text": "The ':nth-child()' pseudo-class, specifically with 'odd' or 'even', is the most common and efficient CSS method for creating zebra-striped tables."
      }
    },
    {
      "conceptId": "T015",
      "conceptTitle": "Attribute for spanning 3 rows",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "When using rowspan, what attribute would a cell have if it spans 3 rows?",
        "options": [
          { "optionText": "rowspan=\"3\"", "isCorrect": true },
          { "optionText": "colspan=\"3\"", "isCorrect": false },
          { "optionText": "spanrows=\"3\"", "isCorrect": false },
          { "optionText": "rows=\"3\"", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<td rowspan=\"3\">Data</td>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Vertical Merge",
        "snippetOrAnalogy": "Like merging three cells vertically in a spreadsheet program.",
        "importance": "Used when a cell's data applies to multiple rows of information."
      },
      "answerExplanation": {
        "title": "Explanation of rowspan",
        "text": "The 'rowspan' attribute defines the number of rows a cell should span vertically."
      }
    },
    {
      "conceptId": "T016",
      "conceptTitle": "Default display value of <table>",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "What is the default display value of a <table> element?",
        "options": [
          { "optionText": "block", "isCorrect": false },
          { "optionText": "inline-block", "isCorrect": false },
          { "optionText": "table", "isCorrect": true },
          { "optionText": "flex", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "/* Default is display: table; */"
      },
      "visualConcept": {
        "title": "Display Mode",
        "snippetOrAnalogy": "The unique display mode that enables the specific grid-like behavior of tables.",
        "importance": "A specific value required for table layout; not the same as `display: block`."
      },
      "answerExplanation": {
        "title": "Explanation of display: table",
        "text": "The default display value for the <table> element is 'table', which applies the complex layout behavior required for tables."
      }
    },
    {
      "conceptId": "C017",
      "conceptTitle": "Defining column count in multi-column layout",
      "category": "CSS Columns",
      "multipleChoiceQuestion": {
        "questionText": "Which attribute helps to define the number of columns in a multi-column CSS layout?",
        "options": [
          { "optionText": "column-count", "isCorrect": true },
          { "optionText": "column-number", "isCorrect": false },
          { "optionText": "columns", "isCorrect": false },
          { "optionText": "col-count", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<div>... content ...</div>",
        "css": "div { column-count: 3; }"
      },
      "visualConcept": {
        "title": "Fixed Column Count",
        "snippetOrAnalogy": "Forces content to split into a precise number of vertical blocks.",
        "importance": "Specifies the exact number of columns the content should be divided into."
      },
      "answerExplanation": {
        "title": "Explanation of column-count",
        "text": "The 'column-count' property specifies the exact number of columns an element's content should be divided into."
      }
    },
    {
      "conceptId": "C018",
      "conceptTitle": "Defining column width in multi-column layout",
      "category": "CSS Columns",
      "multipleChoiceQuestion": {
        "questionText": "To define the width of columns in CSS multi-column layout which property is used?",
        "options": [
          { "optionText": "column-width", "isCorrect": true },
          { "optionText": "col-width", "isCorrect": false },
          { "optionText": "width", "isCorrect": false },
          { "optionText": "span-columns", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<div>... content ...</div>",
        "css": "div { column-width: 150px; }"
      },
      "visualConcept": {
        "title": "Min/Preferred Width",
        "snippetOrAnalogy": "The browser uses this value to calculate the best fit for columns.",
        "importance": "Sets a preferred, minimum width. The browser adjusts the number of columns accordingly."
      },
      "answerExplanation": {
        "title": "Explanation of column-width",
        "text": "The 'column-width' property sets a preferred, minimum width for the columns. The browser calculates the actual number of columns based on the container size."
      }
    },
    {
      "conceptId": "C019",
      "conceptTitle": "Spacing between columns in CSS",
      "category": "CSS Columns",
      "multipleChoiceQuestion": {
        "questionText": "How is the spacing between columns controlled in CSS?",
        "options": [
          { "optionText": "column-gap", "isCorrect": true },
          { "optionText": "gap-between", "isCorrect": false },
          { "optionText": "column-space", "isCorrect": false },
          { "optionText": "col-spacing", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<div>... content ...</div>",
        "css": "div { column-gap: 20px; }"
      },
      "visualConcept": {
        "title": "Gutter Space",
        "snippetOrAnalogy": "The empty margin between the text columns.",
        "importance": "Sets the space (gutter) between the columns in a multi-column layout."
      },
      "answerExplanation": {
        "title": "Explanation of column-gap",
        "text": "The 'column-gap' property sets the space (gutter) between the columns in a multi-column layout."
      }
    },
    {
      "conceptId": "C020",
      "conceptTitle": "Adding a vertical line between columns",
      "category": "CSS Columns",
      "multipleChoiceQuestion": {
        "questionText": "Which CSS property adds a vertical line between columns?",
        "options": [
          { "optionText": "column-border", "isCorrect": false },
          { "optionText": "column-rule", "isCorrect": true },
          { "optionText": "col-border", "isCorrect": false },
          { "optionText": "col-rule", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<div>... content ...</div>",
        "css": "div { column-rule: 1px solid #ccc; }"
      },
      "visualConcept": {
        "title": "Column Separator",
        "snippetOrAnalogy": "Visually separates columns, similar to a vertical border.",
        "importance": "Shorthand for width, style, and color of the separator line."
      },
      "answerExplanation": {
        "title": "Explanation of column-rule",
        "text": "The 'column-rule' property is a shorthand for 'column-rule-width', 'column-rule-style', and 'column-rule-color', placing a separator in the column gap."
      }
    },
    {
      "conceptId": "C021",
      "conceptTitle": "Manually forcing a column break",
      "category": "CSS Columns",
      "multipleChoiceQuestion": {
        "questionText": "How do you manually force a column break in multi-column layout?",
        "options": [
          { "optionText": "break-after: column", "isCorrect": true },
          { "optionText": "column-break-after: always", "isCorrect": false },
          { "optionText": "break-column: always", "isCorrect": false },
          { "optionText": "column-break: forced", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<h2>Section 2</h2><p>...</p>",
        "css": "h2 { break-after: column; }"
      },
      "visualConcept": {
        "title": "Forced Flow",
        "snippetOrAnalogy": "Ensures the element moves the following content to the start of the next column.",
        "importance": "Used to prevent headers or important elements from being split across columns."
      },
      "answerExplanation": {
        "title": "Explanation of break-after",
        "text": "The modern CSS property for forcing a break is 'break-after: column', applied to an element to ensure the next content starts in a new column."
      }
    },
    {
      "conceptId": "T022",
      "conceptTitle": "Purpose of the <tfoot> element",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What is the purpose of the <tfoot> element in a table?",
        "options": [
          { "optionText": "Contains footer rows for summary data", "isCorrect": true },
          { "optionText": "Contains all rows", "isCorrect": false },
          { "optionText": "Replaces <tbody>", "isCorrect": false },
          { "optionText": "Contains header rows", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<tfoot>\n  <tr><td colspan=\"3\">Total: $99.00</td></tr>\n</tfoot>",
        "css": "/* Often styled to separate it from the main body */"
      },
      "visualConcept": {
        "title": "Table Footer",
        "snippetOrAnalogy": "The bottom section for totals, subtotals, or footnotes.",
        "importance": "Groups summary content, which can remain visible during printing."
      },
      "answerExplanation": {
        "title": "Explanation of <tfoot>",
        "text": "The <tfoot> element is used to group the content in the footer of an HTML table, typically for summary data like totals or footnotes."
      }
    },
    {
      "conceptId": "T023",
      "conceptTitle": "Styling a table caption with CSS",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How can you style a table caption with CSS?",
        "options": [
          { "optionText": "caption { text-align: center; }", "isCorrect": true },
          { "optionText": "table-caption { style: center; }", "isCorrect": false },
          { "optionText": "caption-style { align: center; }", "isCorrect": false },
          { "optionText": "#caption { position: center; }", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<caption>Sales Figures</caption>",
        "css": "caption { \n  font-weight: bold;\n  padding: 10px;\n}"
      },
      "visualConcept": {
        "title": "Caption Styling",
        "snippetOrAnalogy": "The caption is a standard HTML element and can be targeted directly.",
        "importance": "Allows control over position, font, and color of the table title."
      },
      "answerExplanation": {
        "title": "Explanation of <caption> Selector",
        "text": "The <caption> element is a standard element that can be targeted and styled directly using the 'caption' CSS selector."
      }
    },
    {
      "conceptId": "T024",
      "conceptTitle": "Semantic purpose of <thead>",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What is the semantic purpose of using <thead>?",
        "options": [
          { "optionText": "Defines header rows for accessibility and styling", "isCorrect": true },
          { "optionText": "Group footer rows", "isCorrect": false },
          { "optionText": "Wrap captions", "isCorrect": false },
          { "optionText": "Group all rows", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<thead>\n  <tr>...</tr>\n</thead>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Header Row Grouping",
        "snippetOrAnalogy": "Separates the header from the main data content.",
        "importance": "Vital for screen readers and allows the header to remain visible when scrolling a long table."
      },
      "answerExplanation": {
        "title": "Explanation of <thead>",
        "text": "The <thead> element explicitly defines the block of rows containing column headers, which is vital for screen readers and allows the browser to keep the header visible when scrolling a long table."
      }
    },
    {
      "conceptId": "R025",
      "conceptTitle": "Importance of semantic table markup",
      "category": "Responsive Design",
      "multipleChoiceQuestion": {
        "questionText": "When designing tables, why is semantic markup important?",
        "options": [
          { "optionText": "Easier for screen readers and search engines", "isCorrect": true },
          { "optionText": "It is easier to write", "isCorrect": false },
          { "optionText": "Design color easier", "isCorrect": false },
          { "optionText": "None", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Meaningful Structure",
        "snippetOrAnalogy": "Describes the content's role, not just its appearance.",
        "importance": "Allows assistive technologies to correctly interpret the relationship between headers and data cells."
      },
      "answerExplanation": {
        "title": "Explanation of Semantic Markup",
        "text": "Semantic markup provides meaning to the content structure. For tables, this allows assistive technologies (like screen readers) to correctly interpret the relationship between header cells and data cells."
      }
    },
    {
      "conceptId": "T026",
      "conceptTitle": "Preventing table borders from overlapping",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "What CSS property helps prevent table borders overlapping?",
        "options": [
          { "optionText": "border-collapse", "isCorrect": true },
          { "optionText": "border-spacing", "isCorrect": false },
          { "optionText": "border-width", "isCorrect": false },
          { "optionText": "border-stroke", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "table { border-collapse: collapse; }"
      },
      "visualConcept": {
        "title": "Border Merging",
        "snippetOrAnalogy": "Tells the browser to treat adjacent borders as a single line.",
        "importance": "Setting it to 'collapse' causes borders to merge, eliminating double lines."
      },
      "answerExplanation": {
        "title": "Explanation of border-collapse",
        "text": "The 'border-collapse' property controls whether borders between table cells are separated or merged into a single border. Setting it to 'collapse' prevents overlapping."
      }
    },
    {
      "conceptId": "T027",
      "conceptTitle": "Styling a specific column group with CSS",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How do you include content in a specific column group with CSS?",
        "options": [
          { "optionText": "Use the nth-child selector on col elements", "isCorrect": true },
          { "optionText": "Use colgroup attribute", "isCorrect": false },
          { "optionText": "Use col attribute only", "isCorrect": false },
          { "optionText": "Apply classes to tbody", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<colgroup><col class=\"special\"><col></colgroup>",
        "css": ".special { background-color: yellow; }"
      },
      "visualConcept": {
        "title": "Column Targeting",
        "snippetOrAnalogy": "Applying a class to the <col> tag lets you target the entire column visually.",
        "importance": "The simplest way to apply vertical background colors or widths to columns."
      },
      "answerExplanation": {
        "title": "Explanation of Column Styling",
        "text": "You can target specific <col> elements using CSS selectors like 'colgroup:nth-child(n) > col', but often the simplest way is applying a class directly to the <col> tag."
      }
    },
    {
      "conceptId": "R028",
      "conceptTitle": "Best CSS unit for responsive column widths",
      "category": "Responsive Design",
      "multipleChoiceQuestion": {
        "questionText": "Which CSS unit works best for responsive column widths?",
        "options": [
          { "optionText": "px", "isCorrect": false },
          { "optionText": "em", "isCorrect": false },
          { "optionText": "%", "isCorrect": true },
          { "optionText": "cm", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "td { width: 25%; }"
      },
      "visualConcept": {
        "title": "Relative Sizing",
        "snippetOrAnalogy": "The width is relative to the table's total width.",
        "importance": "Percentage units define widths relative to the container, which is fundamental to fluid, responsive layouts."
      },
      "answerExplanation": {
        "title": "Explanation of Percentage Unit",
        "text": "Percentage (%) units define widths relative to the container element, which is fundamental to fluid, responsive layouts where elements must adjust to screen size."
      }
    },
    {
      "conceptId": "T029",
      "conceptTitle": "Styling only the first row of a table",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How do you assign a particular style only to the first row of a table?",
        "options": [
          { "optionText": "tbody tr:first-child", "isCorrect": true },
          { "optionText": "tr:first-row", "isCorrect": false },
          { "optionText": "first-row { }", "isCorrect": false },
          { "optionText": "tr:first", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "tbody tr:first-child { font-style: italic; }"
      },
      "visualConcept": {
        "title": "Targeting the First Element",
        "snippetOrAnalogy": "Selects the first child element of its parent.",
        "importance": "The ':first-child' pseudo-class targets the very first row within its parent group (e.g., <tbody>)."
      },
      "answerExplanation": {
        "title": "Explanation of :first-child",
        "text": "The ':first-child' pseudo-class, applied to the <tr> element within <tbody>, targets the very first data row."
      }
    },
    {
      "conceptId": "T030",
      "conceptTitle": "Accessible table captions best practice",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "Best practice for adding accessible table captions is:",
        "options": [
          { "optionText": "Use <caption> inside <table>", "isCorrect": true },
          { "optionText": "Use <figcaption> outside table", "isCorrect": false },
          { "optionText": "Add titles only via CSS", "isCorrect": false },
          { "optionText": "Use aria-label only", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<table>\n  <caption>...</caption>\n</table>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Semantic Caption",
        "snippetOrAnalogy": "The proper, HTML standard way to title a table.",
        "importance": "Provides an accessible title or summary for a table's content."
      },
      "answerExplanation": {
        "title": "Explanation of <caption>",
        "text": "The <caption> element is the semantic way to provide an accessible title or summary for a table's content, placing it directly inside the <table> tag."
      }
    },
    {
      "conceptId": "T031",
      "conceptTitle": "Collapsing table borders into a single border",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which property can you use to collapse table borders into a single border?",
        "options": [
          { "optionText": "border-collapse: collapse", "isCorrect": true },
          { "optionText": "border-style: collapse", "isCorrect": false },
          { "optionText": "border-merge: true", "isCorrect": false },
          { "optionText": "border-spacing: 0", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "table { border-collapse: collapse; }"
      },
      "visualConcept": {
        "title": "Single Border Line",
        "snippetOrAnalogy": "Removes the double-line effect when cells have borders.",
        "importance": "Setting to 'collapse' makes for a cleaner, modern table look."
      },
      "answerExplanation": {
        "title": "Explanation of border-collapse",
        "text": "Setting 'border-collapse' to 'collapse' causes adjacent cell borders to merge into a single border, eliminating double lines and making for a cleaner look."
      }
    },
    {
      "conceptId": "T032",
      "conceptTitle": "Difference between <th> and <td>",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "What is the main difference between <th> and <td> elements?",
        "options": [
          { "optionText": "<th> is header cells, <td> is data cells", "isCorrect": true },
          { "optionText": "<th> is for tables, <td> for lists", "isCorrect": false },
          { "optionText": "<td> is a header cell", "isCorrect": false },
          { "optionText": "No difference", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<tr><th>Header</th><td>Data</td></tr>",
        "css": "/* <th> is default bold/centered */"
      },
      "visualConcept": {
        "title": "Semantic Role",
        "snippetOrAnalogy": "<th> labels the data; <td> contains the data.",
        "importance": "<th> provides semantic meaning for accessibility, while <td> is for standard data content."
      },
      "answerExplanation": {
        "title": "Explanation of <th> vs <td>",
        "text": "<th> provides semantic meaning that a cell is a header for a column or row, while <td> is for standard data content."
      }
    },
    {
      "conceptId": "T033",
      "conceptTitle": "CSS property for table row height",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which CSS property changes the height of table rows?",
        "options": [
          { "optionText": "height", "isCorrect": true },
          { "optionText": "line-height", "isCorrect": false },
          { "optionText": "cell-height", "isCorrect": false },
          { "optionText": "row-size", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "tr { height: 40px; }"
      },
      "visualConcept": {
        "title": "Vertical Dimension",
        "snippetOrAnalogy": "Sets the minimum height of the entire row.",
        "importance": "The standard 'height' property is used to set the row height."
      },
      "answerExplanation": {
        "title": "Explanation of height",
        "text": "The standard 'height' property is used to set the row height. 'line-height' controls the space between lines of text within the cell."
      }
    },
    {
      "conceptId": "T034",
      "conceptTitle": "Why use <col> with <colgroup>?",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "Why use <col> with <colgroup>?",
        "options": [
          { "optionText": "To assign styles and properties to individual columns", "isCorrect": true },
          { "optionText": "To space cells", "isCorrect": false },
          { "optionText": "To merge cells", "isCorrect": false },
          { "optionText": "To format captions", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<colgroup><col class=\"id-col\"></colgroup>",
        "css": ".id-col { width: 50px; }"
      },
      "visualConcept": {
        "title": "Column Properties",
        "snippetOrAnalogy": "The <col> is the worker that applies the style to the column group.",
        "importance": "The <col> tag is the mechanism used within a <colgroup> to target and apply styles to individual columns."
      },
      "answerExplanation": {
        "title": "Explanation of <col> usage",
        "text": "The <col> tag is the mechanism used within a <colgroup> to target and apply styles (like width or background color) to individual columns."
      }
    },
    {
      "conceptId": "T035",
      "conceptTitle": "Targeting all columns within a <colgroup>",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How to target all columns within a <colgroup>?",
        "options": [
          { "optionText": "colgroup col { }", "isCorrect": true },
          { "optionText": "table columns { }", "isCorrect": false },
          { "optionText": "colgroup > col { }", "isCorrect": false },
          { "optionText": "table-col { }", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "colgroup col { background-color: lightgray; }"
      },
      "visualConcept": {
        "title": "Descendant Selector",
        "snippetOrAnalogy": "Selects every <col> element that is a descendant of <colgroup>.",
        "importance": "The 'colgroup col' selector targets every <col> element inside a <colgroup>, allowing bulk styling."
      },
      "answerExplanation": {
        "title": "Explanation of CSS Selector",
        "text": "The 'colgroup col' selector targets every <col> element inside a <colgroup>, allowing bulk styling for all defined columns."
      }
    },
    {
      "conceptId": "T036",
      "conceptTitle": "Setting a fixed table layout mode",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which property sets the table to use a fixed layout algorithm?",
        "options": [
          { "optionText": "table-layout: fixed", "isCorrect": true },
          { "optionText": "table-style: fixed", "isCorrect": false },
          { "optionText": "width: fixed", "isCorrect": false },
          { "optionText": "display: table-fixed", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "table { table-layout: fixed; }"
      },
      "visualConcept": {
        "title": "Fixed Rendering",
        "snippetOrAnalogy": "The browser uses width/colgroup/first row data to quickly draw the table.",
        "importance": "Makes rendering faster as the browser doesn't analyze all content before drawing."
      },
      "answerExplanation": {
        "title": "Explanation of table-layout",
        "text": "The 'table-layout: fixed' property makes rendering faster as the browser can determine column widths without having to analyze all the content of the cells."
      }
    },
    {
      "conceptId": "T037",
      "conceptTitle": "Hiding text that overflows a cell",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "How can you hide text that overflows the cell's boundaries?",
        "options": [
          { "optionText": "overflow: hidden", "isCorrect": true },
          { "optionText": "white-space: nowrap", "isCorrect": false },
          { "optionText": "text-overflow: clip", "isCorrect": false },
          { "optionText": "visibility: hidden", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "td { overflow: hidden; white-space: nowrap; }"
      },
      "visualConcept": {
        "title": "Content Clipping",
        "snippetOrAnalogy": "The cell acts like a window, only showing what fits.",
        "importance": "Applies to the <td> element and hides any content that extends beyond the cell's boundary."
      },
      "answerExplanation": {
        "title": "Explanation of overflow",
        "text": "Applying 'overflow: hidden' to the <td> element will hide any content that extends beyond the cell's padding and border."
      }
    },
    {
      "conceptId": "T038",
      "conceptTitle": "Adding inner space to table cells",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "What CSS property adds inner space between the content and the cell border?",
        "options": [
          { "optionText": "margin", "isCorrect": false },
          { "optionText": "padding", "isCorrect": true },
          { "optionText": "cell-padding", "isCorrect": false },
          { "optionText": "border-spacing", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "",
        "css": "th, td { padding: 8px; }"
      },
      "visualConcept": {
        "title": "Inner Buffer",
        "snippetOrAnalogy": "Pushes the content away from the border line.",
        "importance": "The 'padding' property is applied to <td> and <th> elements and adds space inside the cell boundary."
      },
      "answerExplanation": {
        "title": "Explanation of padding",
        "text": "The 'padding' property applies to <td> and <th> elements and adds space inside the cell boundary, pushing the content away from the border."
      }
    },
    {
      "conceptId": "T039",
      "conceptTitle": "Accessibility attribute for complex headers",
      "category": "HTML Tables",
      "multipleChoiceQuestion": {
        "questionText": "Which attribute is best for associating data cells with their headers in complex tables?",
        "options": [
          { "optionText": "scope", "isCorrect": false },
          { "optionText": "id and headers", "isCorrect": true },
          { "optionText": "title", "isCorrect": false },
          { "optionText": "aria-label", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<th id=\"c1\">Header</th>\n<td headers=\"c1\">Data</td>",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Explicit Linking",
        "snippetOrAnalogy": "Manually connects a specific data cell to a specific header cell.",
        "importance": "The most robust accessibility method for complex tables with merged cells."
      },
      "answerExplanation": {
        "title": "Explanation of id and headers",
        "text": "For simple tables, 'scope' on <th> works. For complex tables with merged cells, using the 'id' attribute on <th> and the 'headers' attribute on <td> is the most robust accessibility method."
      }
    },
    {
      "conceptId": "T040",
      "conceptTitle": "Default text alignment for <th>",
      "category": "CSS Tables",
      "multipleChoiceQuestion": {
        "questionText": "What is the default text alignment for content inside a <th> element?",
        "options": [
          { "optionText": "left", "isCorrect": false },
          { "optionText": "right", "isCorrect": false },
          { "optionText": "center", "isCorrect": true },
          { "optionText": "justify", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<th>Product Name</th>",
        "css": "/* Default is text-align: center; */"
      },
      "visualConcept": {
        "title": "Default Header Style",
        "snippetOrAnalogy": "Browsers automatically place header text in the middle of the cell.",
        "importance": "A browser default that is commonly overridden for left-aligned tables."
      },
      "answerExplanation": {
        "title": "Explanation of Default Alignment",
        "text": "By default, browser stylesheets align the text content of <th> (table header) elements to the center."
      }
    },
    {
      "conceptId": "F041",
      "conceptTitle": "HTML element for creating a form",
      "category": "HTML Forms",
      "multipleChoiceQuestion": {
        "questionText": "Which HTML element is used to create a form?",
        "options": [
          { "optionText": "<input>", "isCorrect": false },
          { "optionText": "<form>", "isCorrect": true },
          { "optionText": "<label>", "isCorrect": false },
          { "optionText": "<section>", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<form action=\"/submit\" method=\"post\">\n  \n</form>",
        "css": "/* The form tag is block-level */"
      },
      "visualConcept": {
        "title": "Form Container",
        "snippetOrAnalogy": "The box that collects all the user's information and submits it.",
        "importance": "The container that defines how user input is collected and processed."
      },
      "answerExplanation": {
        "title": "Explanation of <form>",
        "text": "The <form> element is the container that collects user input and defines how that data should be processed (via the 'action' and 'method' attributes)."
      }
    },
    {
      "conceptId": "F042",
      "conceptTitle": "Attribute to send form data",
      "category": "HTML Forms",
      "multipleChoiceQuestion": {
        "questionText": "Which attribute of the <form> tag specifies where to send the form data?",
        "options": [
          { "optionText": "method", "isCorrect": false },
          { "optionText": "action", "isCorrect": true },
          { "optionText": "target", "isCorrect": false },
          { "optionText": "send", "isCorrect": false }
        ]
      },
      "codeExample": {
        "html": "<form action=\"/submit-endpoint\" method=\"post\">",
        "css": "/* No specific CSS needed */"
      },
      "visualConcept": {
        "title": "Submission Endpoint",
        "snippetOrAnalogy": "The address (URL) where the collected information is delivered.",
        "importance": "Crucial for server-side processing of form data."
      },
      "answerExplanation": {
        "title": "Explanation of action",
        "text": "The 'action' attribute of the <form> tag specifies the URL to which the form data will be sent upon submission."
      }
    }
  ]
}
